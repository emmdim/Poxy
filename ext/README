This directory is now under version control and still has my own projects.


This application acts kind of like a proxy. It assumes that there is a local
dump POX controller and and a remote actual generic Openflow controller that
does all the smart stuff. The apps job is to  register the switch in both 
controllers but use the local one actually only to simulate that is connected
to the controller. The remote one will contain the actual controller logic
(for example another POX app).

The main files are:

events.py: Contains the new events created.

async.py: Kind of a socket wrapper for writing to a socket and asynchronous
          reading

proxy.py: The module that contains most of the logic. Lies in the middle of
          the asynchornous connection object of async.py and the basic POX 
          functionality.

myof_01.py: A copy of the switch hanlder of pox of_01.py which starts also the
            proxy


Start with debug on and connect to the central conntroler listening to the 
IP: RADRRESS (string, default = "127.0.0.1")
PORT: RPORT (int, default = 6634 )
and to the :
../.pox.py log.level --DEBUG myof_01 [--rport=RPORT] [--raddress=RADRRESS]
